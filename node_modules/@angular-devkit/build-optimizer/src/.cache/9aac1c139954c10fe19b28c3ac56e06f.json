{"remainingRequest":"C:\\Users\\Pablo\\Desktop\\coplus\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Pablo\\Desktop\\coplus\\node_modules\\sweetalert2\\src\\utils\\aria.js","dependencies":[{"path":"C:\\Users\\Pablo\\Desktop\\coplus\\node_modules\\sweetalert2\\src\\utils\\aria.js","mtime":499162500000},{"path":"C:\\Users\\Pablo\\Desktop\\coplus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Pablo\\Desktop\\coplus\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["import { getContainer } from './dom/getters.js'\nimport { contains } from './dom/domUtils.js'\nimport { toArray } from './utils.js'\n\n// From https://developer.paciellogroup.com/blog/2018/06/the-current-state-of-modal-dialog-accessibility/\n// Adding aria-hidden=\"true\" to elements outside of the active modal dialog ensures that\n// elements not within the active modal dialog will not be surfaced if a user opens a screen\n// readerâ€™s list of elements (headings, form controls, landmarks, etc.) in the document.\n\nexport const setAriaHidden = () => {\n  const bodyChildren = toArray(document.body.children)\n  bodyChildren.forEach(el => {\n    if (el === getContainer() || contains(el, getContainer())) {\n      return\n    }\n\n    if (el.hasAttribute('aria-hidden') ) {\n      el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden'))\n    }\n    el.setAttribute('aria-hidden', 'true')\n  })\n}\n\nexport const unsetAriaHidden = () => {\n  const bodyChildren = toArray(document.body.children)\n  bodyChildren.forEach(el => {\n    if (el.hasAttribute('data-previous-aria-hidden') ) {\n      el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden'))\n      el.removeAttribute('data-previous-aria-hidden')\n    } else {\n      el.removeAttribute('aria-hidden')\n    }\n  })\n}\n",null]}