{"remainingRequest":"C:\\Users\\Pablo\\Desktop\\coplus\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Pablo\\Desktop\\coplus\\node_modules\\sweetalert2\\src\\instanceMethods\\getInput.js","dependencies":[{"path":"C:\\Users\\Pablo\\Desktop\\coplus\\node_modules\\sweetalert2\\src\\instanceMethods\\getInput.js","mtime":499162500000},{"path":"C:\\Users\\Pablo\\Desktop\\coplus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Pablo\\Desktop\\coplus\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["import * as dom from '../utils/dom/index.js'\nimport { swalClasses } from '../utils/classes.js'\nimport privateProps from '../privateProps.js'\n\n// Get input element by specified type or, if type isn't specified, by params.input\nexport function getInput (inputType) {\n  const innerParams = privateProps.innerParams.get(this)\n  const domCache = privateProps.domCache.get(this)\n  inputType = inputType || innerParams.input\n  if (!inputType) {\n    return null\n  }\n  switch (inputType) {\n    case 'select':\n    case 'textarea':\n    case 'file':\n      return dom.getChildByClass(domCache.content, swalClasses[inputType])\n    case 'checkbox':\n      return domCache.popup.querySelector(`.${swalClasses.checkbox} input`)\n    case 'radio':\n      return domCache.popup.querySelector(`.${swalClasses.radio} input:checked`) ||\n        domCache.popup.querySelector(`.${swalClasses.radio} input:first-child`)\n    case 'range':\n      return domCache.popup.querySelector(`.${swalClasses.range} input`)\n    default:\n      return dom.getChildByClass(domCache.content, swalClasses.input)\n  }\n}\n",null]}