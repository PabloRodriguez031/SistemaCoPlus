{"remainingRequest":"C:\\Users\\Pablo\\Desktop\\coplus\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Pablo\\Desktop\\coplus\\node_modules\\sweetalert2\\src\\utils\\dom\\renderers\\renderProgressSteps.js","dependencies":[{"path":"C:\\Users\\Pablo\\Desktop\\coplus\\node_modules\\sweetalert2\\src\\utils\\dom\\renderers\\renderProgressSteps.js","mtime":499162500000},{"path":"C:\\Users\\Pablo\\Desktop\\coplus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Pablo\\Desktop\\coplus\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["import { swalClasses } from '../../classes.js'\nimport { warn } from '../../utils.js'\nimport * as dom from '../../dom/index.js'\nimport sweetAlert from '../../../sweetalert2.js'\n\nexport const renderProgressSteps = (params) => {\n  let progressStepsContainer = dom.getProgressSteps()\n  let currentProgressStep = parseInt(params.currentProgressStep === null ? sweetAlert.getQueueStep() : params.currentProgressStep, 10)\n  if (params.progressSteps && params.progressSteps.length) {\n    dom.show(progressStepsContainer)\n    progressStepsContainer.innerHTML = ''\n    if (currentProgressStep >= params.progressSteps.length) {\n      warn(\n        'Invalid currentProgressStep parameter, it should be less than progressSteps.length ' +\n        '(currentProgressStep like JS arrays starts from 0)'\n      )\n    }\n    params.progressSteps.forEach((step, index) => {\n      let circle = document.createElement('li')\n      dom.addClass(circle, swalClasses.progresscircle)\n      circle.innerHTML = step\n      if (index === currentProgressStep) {\n        dom.addClass(circle, swalClasses.activeprogressstep)\n      }\n      progressStepsContainer.appendChild(circle)\n      if (index !== params.progressSteps.length - 1) {\n        let line = document.createElement('li')\n        dom.addClass(line, swalClasses.progressline)\n        if (params.progressStepsDistance) {\n          line.style.width = params.progressStepsDistance\n        }\n        progressStepsContainer.appendChild(line)\n      }\n    })\n  } else {\n    dom.hide(progressStepsContainer)\n  }\n}\n",null]}