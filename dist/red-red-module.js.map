{"version":3,"sources":["webpack:///./src/app/red/red-editar/red-editar.component.css","webpack:///./src/app/red/red-editar/red-editar.component.html","webpack:///./src/app/red/red-editar/red-editar.component.ts","webpack:///./src/app/red/red-form/red-form.component.css","webpack:///./src/app/red/red-form/red-form.component.html","webpack:///./src/app/red/red-form/red-form.component.ts","webpack:///./src/app/red/red.component.css","webpack:///./src/app/red/red.component.html","webpack:///./src/app/red/red.component.ts","webpack:///./src/app/red/red.module.ts","webpack:///./src/app/red/red.routing.ts"],"names":[],"mappings":"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","file":"red-red-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n            <h4>Editar Red</h4>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n              <nav aria-label=\\\"breadcrumb\\\">\\n                  <ol class=\\\"breadcrumb\\\">\\n                    <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/red']\\\" routerLinkActive=\\\"active\\\">Listado Redes</a></li>\\n                    <li class=\\\"breadcrumb-item\\\"><a>Editar Red</a></li>\\n                  </ol>\\n                </nav>\\n              <form #documentoForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateDocumento()\\\">\\n\\n\\n                  <label>Nombre de Red</label>\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"descripcion\\\" [(ngModel)]=\\\"documento.data['descripcion']\\\" required>\\n                  </div>\\n                  <label>Iglesia a la que pertenece</label>\\n                  <div class=\\\"form-group\\\">\\n                    <select name=\\\"iglesia\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"documento.data['iglesia']\\\" required>\\n                      <option value=\\\"{{documento2.id}}\\\" *ngFor=\\\"let documento2 of documentos2\\\">{{documento2.data['nombre']}}</option>\\n                    </select>\\n                  </div>\\n\\n                  <div class=\\\"card-footer text-center\\\">\\n                      <button [disabled]=\\\"!documentoForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-info\\\">Editar Red</button>\\n                    </div>\\n                </form>                \\n          </div>  \\n        </div>\\n      </div>\\n    </div>\\n</div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../servicios/api.service';\nimport * as firebase from 'firebase';\nimport { NotificationsService } from 'app/servicios/notifications.service';\n\n@Component({\n  selector: 'app-red-editar',\n  templateUrl: './red-editar.component.html',\n  styleUrls: ['./red-editar.component.css']\n})\nexport class RedEditarComponent implements OnInit {\n\n  documento = [] as any;\n  coleccion = 'red';\n\n  documentos2 = [] as any;\n  coleccion2 = 'iglesia';\n\n  constructor(private route: ActivatedRoute, private apiService: ApiService, private notificationsService: NotificationsService) { }\n\n  ngOnInit() {\n\n    this.notificationsService.showLoadingSwal('Cargando datos...', 'Espere por favor');\n    \n    const documentoId = this.route.snapshot.params['id']\n    this.apiService.getDocumentoById(this.coleccion, documentoId).then(documento => {\n        this.documento = {\n          id: documento.id,\n          data: documento.data()\n        };\n        this.notificationsService.hideLoadingSwal();\n      }).catch(error =>{\n        console.log(error);\n        this.notificationsService.showSwal('Ha ocurrido un error', 'Intentelo nuevamente', 'error');\n      });\n\n      firebase.firestore().collection(this.coleccion2).onSnapshot((snapshot) => {\n        this.documentos2 = [] as any;\n        snapshot.forEach(doc => {\n            this.documentos2.push({\n                id: doc.id,\n                data: doc.data()\n            });\n        });\n      });\n    }\n\n    updateDocumento(){      \n      this.notificationsService.showConfirmationSwal().then(resultado => {\n        if(resultado.value){\n          this.notificationsService.showLoadingSwal('Enviando datos...', 'Espere por favor');\n          this.apiService.updateDocumento(this.coleccion, {\n            descripcion: this.documento.data['descripcion'],\n            iglesia: this.documento.data['iglesia'],\n          }, this.documento.id).then(respuesta => {\n            this.notificationsService.showSwal('Editado', 'La red ha sido editada con éxito', 'success');\n          }).catch(error => {\n            console.log(error);\n            this.notificationsService.showSwal('Ha ocurrido un error', 'Intentelo nuevamente', 'error');\n          })\n        }\n      });\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h4>Nueva Red</h4>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <nav aria-label=\\\"breadcrumb\\\">\\n                <ol class=\\\"breadcrumb\\\">\\n                  <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/red']\\\" routerLinkActive=\\\"active\\\">Listado Redes</a></li>\\n                  <li class=\\\"breadcrumb-item\\\"><a>Crear Red</a></li>\\n                </ol>\\n              </nav>\\n            <form #documentoForm=\\\"ngForm\\\" (ngSubmit)=\\\"addDocumento(documentoForm)\\\">\\n                <label>Nombre de Red</label>\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"descripcion\\\" ngModel required>\\n                </div>\\n                <label>Iglesia a la que pertenece</label>\\n                <div class=\\\"form-group\\\">\\n                  <select name=\\\"iglesia\\\" class=\\\"form-control\\\" ngModel required>\\n                    <option value=\\\"{{documento2.id}}\\\" *ngFor=\\\"let documento2 of documentos2\\\">{{documento2.data['nombre']}}</option>\\n                  </select>\\n                </div>\\n                <div class=\\\"card-footer text-center\\\">\\n                    <button [disabled]=\\\"!documentoForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-info\\\">Agregar Red</button>\\n                  </div>\\n              </form>                \\n        </div>  \\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../servicios/api.service';\nimport { NgForm } from '@angular/forms';\nimport * as firebase from 'firebase';\nimport { NotificationsService } from 'app/servicios/notifications.service';\n\n@Component({\n  selector: 'app-red-form',\n  templateUrl: './red-form.component.html',\n  styleUrls: ['./red-form.component.css']\n})\nexport class RedFormComponent implements OnInit {\n\n  documentos = {} as any;\n  coleccion = 'red';\n\n  documentos2 = {} as any;\n  coleccion2 = 'iglesia';\n\n\n  constructor(public apiService: ApiService, private notificationsService: NotificationsService) { }\n\n  ngOnInit() {\n    firebase.firestore().collection(this.coleccion2).onSnapshot((snapshot) => {\n      this.documentos2 = [] as any;\n      snapshot.forEach(doc => {\n          this.documentos2.push({\n              id: doc.id,\n              data: doc.data()\n          });\n      });\n    });\n  }\n\n  addDocumento(form:NgForm) {  \n    this.notificationsService.showConfirmationSwal().then(resultado => {\n      if(resultado.value){\n        this.notificationsService.showLoadingSwal('Enviando datos...', 'Espere por favor');\n        this.apiService.addDocumento(this.coleccion, {\n          descripcion: form.value.descripcion,\n          iglesia: form.value.iglesia,\n        }).then(respuesta => {\n          this.notificationsService.showSwal('Creado', 'La red ha sido creada con éxito', 'success');\n          form.resetForm();\n        }).catch(error => {\n          console.log(error);\n          this.notificationsService.showSwal('Ha ocurrido un error', 'Intentelo nuevamente', 'error');\n        });\n      }\n    });\n  }\n}\n","module.exports = \".acciontabla{\\r\\n    margin: 0 5px;\\r\\n}\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h4 class=\\\"card-title\\\">Lista de Redes</h4>\\n        </div>\\n        <div class=\\\"card-body \\\">\\n          <div class=\\\"toolbar\\\">\\n            <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/crear-red']\\\">Crear Red</button>\\n          </div>  \\n          <label>Seleccione la iglesia de la cual desea ver sus redes</label>         \\n          <div class=\\\"form-group\\\">             \\n          <select name=\\\"iglesia_seleccionada\\\" class=\\\"form-control\\\" (change)=\\\"filtro_iglesia($event)\\\">\\n            <option value=\\\"1\\\">Todos</option>\\n            <option value=\\\"{{iglesia.id}}\\\" *ngFor=\\\"let iglesia of iglesias\\\">{{iglesia.data['nombre']}}</option>\\n          </select>\\n          </div>\\n          <br>\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table\\\">\\n              <tr>\\n                <th>Nombre</th>\\n                <th>Iglesia</th>\\n                <th class=\\\"text-right\\\">Acción</th>\\n              </tr>\\n              <tr *ngFor=\\\"let documento of documentos_filtrados\\\">\\n                <td>{{documento.data['descripcion']}}</td>\\n                <td>{{documento.data['iglesia_nombre']}}</td>\\n                <td class=\\\"text-right\\\">\\n                    <button class=\\\"btn btn-warning btn-sm acciontabla\\\" (click)=\\\"editDocumento(documento)\\\">\\n                        <i class=\\\"nc-icon nc-zoom-split\\\"></i>\\n                    </button>\\n                    <button class=\\\"btn btn-danger btn-sm acciontabla\\\" (click)=\\\"deleteDocumento(documento)\\\">\\n                        <i class=\\\"nc-icon nc-simple-remove\\\"></i>\\n                      </button>\\n                </td>\\n              </tr>\\n            </table>\\n            </div>\\n          </div>\\n\\n      </div>\\n    </div>  \\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../servicios/api.service';\nimport { Router } from '@angular/router';\nimport * as firebase from 'firebase';\nimport { NotificationsService } from 'app/servicios/notifications.service';\n\n@Component({\n  selector: 'app-red', \n  templateUrl: './red.component.html',\n  styleUrls: ['./red.component.css']\n})\nexport class RedComponent implements OnInit{\n  documentos :any = []; \n  coleccion = 'red';\n\n  iglesias :any = []; \n\n  documentos_filtrados :any = [];\n\n\n  constructor(public apiService: ApiService, private router: Router, private notificationsService: NotificationsService ) { }\n\n  ngOnInit() {\n    firebase.firestore().collection('iglesia').onSnapshot((snapshot) => {\n      this.iglesias = [] as any;\n      snapshot.forEach(doc => {\n          this.iglesias.push({\n              id: doc.id,\n              data: doc.data()\n          });\n      });\n      firebase.firestore().collection(this.coleccion).onSnapshot((snapshot) => {\n        this.documentos = [] as any;\n        snapshot.forEach(doc => {\n            this.documentos.push({\n                id: doc.id,\n                data: doc.data()\n            });\n        });      \n        this.documentos.forEach(red => {\n        this.iglesias.forEach(iglesia => {\n          if(red.data['iglesia'] === iglesia.id){\n            red.data['iglesia_nombre'] = iglesia.data['nombre'];\n          }\n        });\n      });\n        this.documentos_filtrados = this.documentos.slice();\n      });\n    });  \n  }\n\n  deleteDocumento(documento) {        \n    this.notificationsService.showConfirmationSwal().then(resultado => {\n      if(resultado.value){\n        this.notificationsService.showLoadingSwal('Enviando datos...', 'Espere por favor');\n        this.apiService.deleteDocumento(this.coleccion, documento).then(respuesta => {\n          this.notificationsService.showSwal('Borrado', 'La red ha sido borrada con éxito', 'success');          \n        }).catch(error => {\n          console.log(error);\n          this.notificationsService.showSwal('Ha ocurrido un error', 'Intentelo nuevamente', 'error');\n        });\n      }\n    });  \n  }\n\n  editDocumento(documento) {\n    this.router.navigate(['/editar-red',documento.id])\n  }\n\n  filtro_iglesia(evento){\n    console.log(evento);\n    if(evento.target.value == 1){\n      this.documentos_filtrados = this.documentos.slice();\n    }else{\n      this.documentos_filtrados = this.documentos.filter(red => {\n        return red.data['iglesia'] === evento.target.value;\n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { RedComponent } from './red.component';\r\nimport { RedRoutes } from './red.routing';\r\nimport { RedFormComponent } from './red-form/red-form.component';\nimport { RedEditarComponent } from './red-editar/red-editar.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(RedRoutes),\r\n        FormsModule\r\n    ],\r\n    declarations: [RedComponent, RedFormComponent, RedEditarComponent]\r\n})\r\n\r\nexport class RedModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { RedComponent } from './red.component';\r\nimport { RedFormComponent } from './red-form/red-form.component';\r\nimport { RedEditarComponent } from './red-editar/red-editar.component';\r\n\r\nexport const RedRoutes: Routes = [{\r\n    path: '',\r\n    children: [{\r\n        path: 'red',\r\n        component: RedComponent\r\n    },{\r\n        path: 'crear-red',\r\n        component: RedFormComponent\r\n    },{\r\n        path: 'editar-red/:id',\r\n        component: RedEditarComponent\r\n    }]\r\n}];\r\n"],"sourceRoot":""}